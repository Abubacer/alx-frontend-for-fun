/* sorts the variable $list_to_sort and prints the sorted list in the debug output. */

@import "103-sort_list";

$default-sort-order: a b c d e f g h i j k l m n o p q r s t u v w x y z !default;

@function _str-compare($a, $b, $order) {
  $a: to-lower-case($a);
  $b: to-lower-case($b);

  $len-a: str-length($a);
  $len-b: str-length($b);
  $min-len: min($len-a, $len-b);

  @for $i from 1 through $min-len {
    $char-a: str-slice($a, $i, $i);
    $char-b: str-slice($b, $i, $i);

    $index-a: index($order, $char-a);
    $index-b: index($order, $char-b);

    @if $index-a and $index-b and $index-a != $index-b {
      @return $index-a < $index-b;
    }
  }

  @return $len-a < $len-b;
}

@function quick-sort($list, $order: $default-sort-order) {
  $length: length($list);

  @if $length > 1 {
    $pivot: nth($list, ceil($length / 2));

    $less: ();
    $equal: ();
    $large: ();

    @each $item in $list {
      @if $item == $pivot {
        $equal: append($equal, $item, comma);
      } @else if _str-compare($item, $pivot, $order) {
        $less: append($less, $item, comma);
      } @else {
        $large: append($large, $item, comma);
      }
    }

    @return join(
      join(quick-sort($less, $order), $equal),
      quick-sort($large, $order)
    );
  }

  @return $list;
}

$sorted-list: quick-sort($list_to_sort, $default-sort-order);

@debug "#{$sorted-list}";
